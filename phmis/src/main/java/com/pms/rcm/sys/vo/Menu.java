package com.pms.rcm.sys.vo;


import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import java.util.Set;
import java.util.TreeSet;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.hibernate.annotations.GenericGenerator;
 


/**
 * Menu generated by MyEclipse Persistence Tools
 */
@Entity
@Table(name="Function_page_info")
public class Menu implements java.io.Serializable,Comparable<Menu> {

	// Fields
	@Id
	@GeneratedValue(generator="system-uuid")
	@GenericGenerator(name = "system-uuid",strategy="uuid") 
	@Column(name="Function_page_id")
	private String id;
	@Column(name="cas_Code")
	private String casCode;
	@Column(name="interface_name")
	private String menuName;
	@Column(name="menu_Type")
	private String menuType;
	@Column(name="URL")
	private String actionPath;
	@Column(name="serial")
	private Long serial;
	@Column(name="is_Use")
	private String isUse;
	@Column(name="PARENT_ID")
	private String parentId;
	@Column(name="menu_icon")
	private String menuIcon;
	/*@ManyToMany  
	@JoinTable(name = "SYS_MENU_MODULE_FUN", joinColumns = @JoinColumn(name = "MENU_ID"), inverseJoinColumns = @JoinColumn(name = "FUN_ID"))  
    private Set<ModuleFun> moduleFunSet = new TreeSet<ModuleFun>();//菜单相关功能集合，由hibernate维护
*/	@Transient  
    private List<Menu> children = new ArrayList<Menu>();
	@Transient  
	private Menu parentMenu;
	@Transient  
	private List<Menu> subMenu;
	@Transient  
	private boolean hasMenu = true;
	@Transient
	private String Target;
	@Transient  
	private boolean nocheck = false;
	
	@Column(name="description")
	private String description; 
	public String getDescription() {
		return this.description;
	} 
	public void setDescription(String description) {
		this.description = description;
	}
	public boolean isNocheck() {
		return nocheck;
	}
	public void setNocheck(boolean nocheck) {
		this.nocheck = nocheck;
	}
	public String getTarget() {
		return Target;
	}
	public void setTarget(String target) {
		Target = target;
	}
	public Menu getParentMenu() {
		return parentMenu;
	}
	public void setParentMenu(Menu parentMenu) {
		this.parentMenu = parentMenu;
	}
	public List<Menu> getSubMenu() {
		return subMenu;
	}
	public void setSubMenu(List<Menu> subMenu) {
		this.subMenu = subMenu;
	}
	public boolean isHasMenu() {
		return hasMenu;
	}
	public void setHasMenu(boolean hasMenu) {
		this.hasMenu = hasMenu;
	}
	// Constructors

	/** default constructor */
	public Menu() {
	}

	/** minimal constructor */
	public Menu(String casCode, String menuName) {
		this.casCode = casCode;
		this.menuName = menuName;
	}

	/** full constructor */
	public Menu(String casCode, String menuName,
			String menuType, String actionPath, Long serial, String isUse) {
		this.casCode = casCode;
		this.menuName = menuName;
		this.menuType = menuType;
		this.actionPath = actionPath;
		this.serial = serial;
		this.isUse = isUse;
	}

	// Property accessors

	public String getId() {
		return this.id;
	}

	public void setId(String id) {
		this.id = id;
	}

	public String getCasCode() {
		return this.casCode;
	}

	public void setCasCode(String casCode) {
		this.casCode = casCode;
	}

	public String getMenuName() {
		return this.menuName;
	}

	public void setMenuName(String menuName) {
		this.menuName = menuName;
	}

	public String getMenuType() {
		return this.menuType;
	}

	public void setMenuType(String menuType) {
		this.menuType = menuType;
	}

	public String getActionPath() {
		return this.actionPath;
	}

	public void setActionPath(String actionPath) {
		this.actionPath = actionPath;
	}

	public Long getSerial() {
		return this.serial;
	}

	public void setSerial(Long serial) {
		this.serial = serial;
	}

	public String getIsUse() {
		return this.isUse;
	}

	public void setIsUse(String isUse) {
		this.isUse = isUse;
	}
/*
	 public Set<ModuleFun> getModuleFunSet() {
		return moduleFunSet;
	}

	public void setModuleFunSet(Set<ModuleFun> moduleFunSet) {
		this.moduleFunSet = moduleFunSet;
	}*/

	public List<Menu> getChildren() {
		return children;
	}

	public void setChildren(List<Menu> children) {
		this.children = children;
	}

	/**
	 * 
	 * <li>方法名：getModuleFunIds
	 * <li>@return
	 * <li>返回类型：String
	 * <li>说明：只获得功能Id，用逗号间隔
	 * <li>创建人：曾明辉
	 * <li>创建日期：2008-11-27
	 * <li>修改人： 
	 * <li>修改日期：
	 */
	/*public String getModuleFunIds(){
		String ids = "";
		
		for (ModuleFun fun : moduleFunSet) {
			ids += fun.getId() + ",";
		}
		if(ids.lastIndexOf(",") > 0){
			ids = ids.substring(0,ids.lastIndexOf(","));
		}
		return ids;
	}*/
	/**
     * 
     * <li>方法名：getParentCasCode
     * <li>@return
     * <li>返回类型：String
     * <li>说明：获得父菜单级联编号
     * <li>创建人：曾明辉
     * <li>创建日期：2008-11-21
     * <li>修改人： 
     * <li>修改日期：
     */
    public String getParentCasCode(){
    	if(casCode == null || casCode.length()<=3){
    		return "";
    	}
    	return casCode.substring(0,casCode.length()-3);
    }
	/**
     * 
     * <li>方法名：compareTo
     * <li>@param other
     * <li>@return
     * <li>返回类型：int
     * <li>说明：用于TreeSet排序
     * <li>创建人：曾明辉
     * <li>创建日期：2008-11-5
     * <li>修改人： 
     * <li>修改日期：
     */
    public int compareTo(Menu other) {
    	if (other == null || other.casCode == null || this.casCode == null){
			return 1;
		}
    	if(this.casCode.length() != other.casCode.length()){
    		Integer myLength = this.casCode.length();
    		return myLength.compareTo(other.casCode.length());
    	}
    	if(this.getParentCasCode().equals(other.getParentCasCode())){
    		return this.serial.compareTo(other.serial);
    	}
    	
    	return this.casCode.compareTo(other.casCode);//按表示级联关系的编号排序
    }
    /*
    public static void main(String[] args){
    	Menu m1 = new Menu();
    	m1.casCode = "002";
    	m1.serial = 70L;
    	m1.id = "1111111";

    	Menu m2 = new Menu();
    	m2.casCode = "004";
    	m2.serial = 20L;

    	Menu m3 = new Menu();
    	m3.casCode = "003";
    	m3.serial = 30L;
    	
    	Menu m4 = new Menu();
    	m4.casCode = "002001";
    	m4.serial = 10L;

    	Menu m5 = new Menu();
    	m5.casCode = "004001";
    	m5.serial = 10L;
    	
    	Menu m6 = new Menu();
    	m6.casCode = "003003";
    	m6.serial = 10L;

    	Menu m7 = new Menu();
    	m7.casCode = "003005";
    	m7.serial = 20L;
    	
    	Set<Menu> set = new TreeSet<Menu>();
    	set.add(m1);
    	set.add(m2);
    	set.add(m3);
    	set.add(m4);
    	set.add(m5);
    	set.add(m6);
    	set.add(m7);
    	
//    	for (Menu menu : set) {
//			System.out.println("casCode:" + menu.casCode + "     serial:" + menu.serial);
//		}
    	    	
    }
*/
	@Override
	public boolean equals(Object arg0) {
		if(arg0 == null){
			return false;
		}
		if(! (arg0 instanceof Menu)) {
			return false;
		}
		Menu menu = (Menu)arg0;
		if(menu.id != null){
			return menu.id.equals(this.id);
		}
		else{
			return false;
		}
	}
	public String getParentId() {
		return parentId;
	}
	public void setParentId(String parentId) {
		this.parentId = parentId;
	}
	public String getMenuIcon() {
		return menuIcon;
	}
	public void setMenuIcon(String menuIcon) {
		this.menuIcon = menuIcon;
	}
	
	 
    
}